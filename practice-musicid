#!/usr/bin/env bash

gamebasedir=${XDG_CONFIG_HOME:-~/.config}/practice-musicid/
bold=$'\e[1m'
sgr0=$'\e[0m'

max_duration=30
if ! tmp=$(getopt -o 't:h' --long 'duration:,help' -n "$0" -- "$@"); then
    exit 1
fi
eval set -- "$tmp"
unset tmp
while true; do
    case "$1" in
        '-t'|'--duration')
            if [[ $2 =~ ^(([1-9][0-9]*)h)?(([1-9][0-9]?)m)?([1-9][0-9]?(\.[0-9]*)?)s?$ ]]; then
                hours=${BASH_REMATCH[2]:-0}
                minutes=${BASH_REMATCH[4]:-0}
                seconds=${BASH_REMATCH[5]}
                max_duration=$(LC_ALL=C bc <<< "($hours * 60 + $minutes) * 60 + $seconds")
                unset hours minutes seconds
            else
                printf >&2 '%s: invalid duration: %s\n' "$0" "$2"
                exit 1
            fi
            shift 2
            continue
            ;;
        '-h'|'--help')
            printf 'Usage: %s [-t|--duration DURATION] [DIRECTORY]\n' "$0"
            printf 'The game will repeatedly play a random snippet (up to DURATION, default 30s)\n'
            printf 'of a random music file in DIRECTORY (default "default"),\n'
            printf 'which should be a subdirectory of %s,\n' "$gamebasedir"
            printf 'and ask you to identify the file.\n'
            printf 'Exit with Ctrl-C.\n'
            exit 0
            ;;
        '--')
            shift
            break
            ;;
    esac
done

gamedir=$gamebasedir/${1:-default}
if ! cd -- "$gamedir"; then
    printf >&2 '%s: should be a directory with (symlinks to) audio files: %s\n' "$0" "$gamedir"
    exit 1
fi

shopt -s nullglob
files=(*)
if ((${#files[@]} == 0)); then
    printf >&2 '%s: directory is empty: %s\n' "$0" "$gamedir"
    exit 1
fi

while true; do
    # pick a random file
    file=${files[RANDOM%${#files[@]}]}
    # get its duration
    duration=$(LC_ALL=C ffprobe -i "$file" -show_entries format=duration -v quiet -of csv=p=0) # https://stackoverflow.com/a/22243834/1420237
    if [[ ! $duration ]]; then
        printf 'Invalid duration for file %s! Does the file exist?\n' "$file"
        continue
    fi
    # pick a random offset in the file
    offset=$(LC_ALL=C bc <<< "scale=10; ($SRANDOM / 2^32) * ($duration - $max_duration)")
    # play the file at that offset in the background
    # (-autoexit exits when done, -nodisp hides window, -loglevel quiet disables *almost* all output, > /dev/null hides final newline)
    ffplay -ss "${offset}s" -t "${max_duration}s" -autoexit -nodisp -loglevel quiet -i "$file" > /dev/null &

    printf 'Which of these is it?\n'
    printf 'â€¢ %s\n' "${files[@]}"
    printf '\n'

    while true; do
        IFS= read -r -p'> ' reply

        if [[ $reply = 'quit' || $reply = $file ]]; then
            break
        fi
        for otherfile in "${files[@]}"; do
            if [[ $reply = $otherfile ]]; then
                break 2
            fi
        done

        printf 'That doesnâ€™t look like a valid answer, try again.\n'
    done

    # kill background ffplay if user replied before it finished
    kill %%
    if [[ $reply = 'quit' ]]; then
        break
    elif [[ $reply = $file ]]; then
        printf 'Correct, it was %s%s%s! ðŸŽ‰\n\n' "$bold" "$file" "$sgr0"
    else
        printf 'No, sorry, it was %s%s%s.\n\n' "$bold" "$file" "$sgr0"
    fi
done
